{
  "name": "[MAIN]LINE CHATBOT",
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/reply",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer uRqMFQ1KdVU79IOYm3svDPEctOSxF3ud1hDocb+tIw5D2w7nbEVEoUGSeQhQHf1h69pl2RP47ekJuLsHURRv7iRSvBJaT41Spm3gUKIZvWlHKOhA9EJZgzSal/c50gz3NPY+X1L19fKUL1q77I0dLgdB04t89/1O/w1cDnyilFU="
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -96,
        1888
      ],
      "id": "f6f40fa8-d92f-4b91-aba8-6eb4f0111d9d",
      "name": "發送回應給 LINE",
      "retryOnFail": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "try {\n  // 1️⃣ 取得 replyToken\n  const replyToken = $('Webhook').first().json?.body?.events?.[0]?.replyToken;\n  if (!replyToken) throw new Error('找不到 replyToken');\n\n  // 2️⃣ 取得 AI 模型的 output 內容\n  const outputContent = $input.first().json?.output || $input.first().json.answer || $input.first().json.result;\n  let text = '';\n\n  if (typeof outputContent === 'string') {\n    // 直接是字串\n    text = outputContent;\n\n  } else if (Array.isArray(outputContent)) {\n    // 如果是 [\"字串\", \"字串\", ...]\n    if (outputContent.every(item => typeof item === 'string')) {\n      text = outputContent.join('\\n');\n\n    // 如果是 [{type:'text', text:'...'}]\n    } else if (outputContent.every(item => typeof item === 'object' && item?.type === 'text' && item?.text)) {\n      text = outputContent.map(item => item.text).join('');\n\n    // 如果是 [{output: [...]}]\n    } else if (outputContent.length > 0 && outputContent[0]?.output) {\n      const inner = outputContent[0].output;\n      if (Array.isArray(inner)) {\n        text = inner.join('\\n');\n      } else if (typeof inner === 'string') {\n        text = inner;\n      } else {\n        throw new Error('內部 output 格式不正確');\n      }\n\n    } else {\n      throw new Error('無法識別的 output 陣列格式');\n    }\n\n  } else {\n    throw new Error('output 格式不正確');\n  }\n\n  if (!text || text.trim().length === 0) throw new Error('處理後的文字內容為空');\n\n  // 3️⃣ 文字清理\n  text = text\n    .trim()\n    .replace(/\\r\\n|\\r/g, '\\n')                 // 統一換行\n    .replace(/[\\u0000-\\u0008\\u000B-\\u001F]/g, ''); // 移除危險控制字符\n\n  // 4️⃣ 超長文字自動分段，每段 < 5000 字\n  const segments = [];\n  let remaining = text;\n  const MAX_LENGTH = 4950; // LINE API 上限為 5000，保留一些餘裕\n\n  while (remaining.length > 0) {\n    if (remaining.length <= MAX_LENGTH) {\n      segments.push(remaining);\n      break;\n    }\n    \n    let segment = remaining.substring(0, MAX_LENGTH);\n    // 優先在換行符處切分，其次是空格，以保持句子完整性\n    const cutPoint = Math.max(segment.lastIndexOf('\\n'), segment.lastIndexOf(' '));\n    \n    // 如果找不到好的切分點，就直接硬切\n    segment = (cutPoint > 0) ? segment.substring(0, cutPoint) : segment;\n    \n    segments.push(segment);\n    remaining = remaining.substring(segment.length).trim();\n  }\n\n  // 5️⃣ 組合 LINE Message 物件陣列\n  const messages = segments.map(seg => ({\n    type: 'text',\n    text: seg.length > 0 ? seg : '...(內容已截斷)'\n  }));\n\n  // LINE Reply API 一次最多只能回覆 5 則訊息，所以只取前 5 則\n  const finalMessages = messages.slice(0, 5);\n\n  // ✨ 返回一個包含 replyToken 和 messages 的物件\n  return [{\n    json: {\n      replyToken: replyToken,\n      messages: finalMessages\n    }\n  }];\n\n} catch (error) {\n  // 發生錯誤時，也回傳同樣的結構，方便 LINE 節點處理\n  console.error('處理數據時發生錯誤:', error.message);\n  \n  const replyToken = $('Webhook').first().json?.body?.events?.[0]?.replyToken || 'unknown';\n\n  return [{\n    json: {\n      replyToken: replyToken,\n      messages: [{\n        type: 'text',\n        text: `抱歉，系統在處理您的訊息時發生錯誤，請稍後再試。\\n錯誤資訊：${error.message}`\n      }]\n    }\n  }];\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -320,
        1984
      ],
      "id": "37bf9dfe-66f6-4ec4-b726-7b89e64f55da",
      "name": "Code"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.route }}",
                    "rightValue": "ITR Agent",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "c528785b-7a2a-48d7-893b-75b93f661466"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "308348ac-ce13-4c73-adf6-7dd3aa633acf",
                    "leftValue": "={{ $json.route }}",
                    "rightValue": "FACT Agent",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0702da8c-d912-4ce7-ac08-4b99b366ca9d",
                    "leftValue": "={{ $json.route }}",
                    "rightValue": "NEWS Agent",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3a767599-28f2-4d3c-b70f-3461368605ea",
                    "leftValue": "={{ $json.route }}",
                    "rightValue": "DR Agent",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b164d03e-ff82-4456-ac5e-a84b9dff8e9a",
                    "leftValue": "={{ $json.route }}",
                    "rightValue": "Stock Module",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e4ac1a6e-8a0f-41e2-9a73-0d4a5c7701f9",
                    "leftValue": "={{ $json.route }}",
                    "rightValue": "CB Module",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1419b66c-31d4-4c4d-bb84-8ff42df56e81",
                    "leftValue": "={{ $json.route }}",
                    "rightValue": "Web Module",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "cb44b70b-0ed4-4e89-a4b7-1009c4102c8b",
                    "leftValue": "={{ $json.route }}",
                    "rightValue": "Subscription Module",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "86e9ace5-8274-4875-9b55-9bbade1adbf3",
                    "leftValue": "={{ $json.route }}",
                    "rightValue": "Eat Module",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f676f5c2-6f95-4516-a1c9-3a9afa185d38",
                    "leftValue": "={{ $json.route }}",
                    "rightValue": "Image Module",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7ed80fd4-aa27-463c-a51d-2b54d27e0497",
                    "leftValue": "={{ $('Webhook').item.json.body.events[0].message.type }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4104a43d-0bed-4e1f-b06d-642dcb18076a",
                    "leftValue": "={{ $json.route }}",
                    "rightValue": "Help Handler",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -768,
        1824
      ],
      "id": "5fcf03b9-2829-448d-a389-aea51b4a1689",
      "name": "Switch"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "line-message",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1216,
        1984
      ],
      "id": "608f093a-2679-4cd3-a157-e07b7fea96a0",
      "name": "Webhook",
      "webhookId": "21f50819-ba0e-41e9-a26e-b134c295a71e"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/reply",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer DyXvqj45gHCUtdYt2KAiifG/gFQOfgyrUpXQO/sE9OEry2GqY4o/sistConAkr53tEKIQF9xYbn1BFE9G4EdEEfMOXZoZLMI0JJv25vnEn0GUENP3O9ZkpKNkqe59uQKPhxeqotW/5EgIvqdEC2yhgdB04t89/1O/w1cDnyilFU="
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -96,
        2080
      ],
      "id": "e690519b-4e95-4f93-a4bd-74f1d08dca6c",
      "name": "[TEST]發送回應給 LINE1",
      "retryOnFail": true,
      "notesInFlow": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "// 取得使用者輸入的訊息\nlet text = $json.body.events[0].message.text || \"\";\n\n// 指令對應表\nconst mapping = {\n  \"@ITR\": \"ITR Agent\",\n  \"@FACT\": \"FACT Agent\",\n  \"@NEWS\": \"NEWS Agent\",\n  \"@DR\": \"DR Agent\",\n  \"@STOCK\": \"Stock Module\",\n  \"@CB\": \"CB Module\",\n  \"@WEB\": \"Web Module\",\n  \"@SUBS\": \"Subscription Module\",\n  \"@EAT\": \"Eat Module\",\n  \"@IMG\": \"Image Module\",\n  \"@help\": \"Help Handler\",\n};\n\n// 預設路由\nlet route = \"Default\";\n\n// 遍歷 mapping，找到符合的指令，並移除該關鍵字\nfor (const key of Object.keys(mapping)) {\n  if (text.includes(key)) {\n    route = mapping[key];\n    text = text.replace(key, \"\").trim();  // 移除關鍵字，但保留網址\n    break;\n  }\n}\n\n// 嘗試提取 URL（支援 http/https）\nlet url = null;\nconst urlRegex = /(https?:\\/\\/[^\\s]+)/g;\nconst match = text.match(urlRegex);\nif (match && match.length > 0) {\n  url = match[0];  // 取第一個網址\n  // ❌ 不要從 text 移除網址，避免 userInput 變空\n}\n\n// 回傳統一格式\nreturn [\n  {\n    json: {\n      userInput: text.trim(),\n      route: route,\n      url: url,\n      messageId: $input.first().json.body.events[0].message.id,\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -992,
        1984
      ],
      "id": "946890e0-bd1d-43bb-9f69-8383b6a81673",
      "name": "Code-Switch"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "vnIiG9PUf580bQC7",
          "mode": "list",
          "cachedResultName": "[SUB] ITR Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "userInput": "={{ $('Code-Switch').item.json.userInput }}",
            "url": "={{ $('Code-Switch').item.json.url }}",
            "userId": "={{ $('Webhook').item.json.body.events[0].source.userId }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "userInput",
              "displayName": "userInput",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "userId",
              "displayName": "userId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -544,
        928
      ],
      "id": "4af8eb76-64f2-486f-adcf-6e5dc9440469",
      "name": "ITR Agent"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "162mADlvuCibUju0",
          "mode": "list",
          "cachedResultName": "[SUB]FACT"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "userInput": "={{ $('Code-Switch').item.json.userInput }}",
            "url": "={{ $('Code-Switch').item.json.url }}",
            "userId": "={{ $('Webhook').item.json.body.events[0].source.userId }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "userInput",
              "displayName": "userInput",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "userId",
              "displayName": "userId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -544,
        1120
      ],
      "id": "0b5ff98e-6ec6-4af9-97f0-5dbd3fa37597",
      "name": "FACT Agent"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "8YQ5Dxn0lt0iaJ6G",
          "mode": "list",
          "cachedResultName": "[SUB] NEWS Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "userInput": "{{ $('Code-Switch').item.json.userInput }}",
            "url": "{{ $('Code-Switch').item.json.url }}",
            "userId": "{{ $('Webhook').item.json.body.events[0].source.userId }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "userInput",
              "displayName": "userInput",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "userId",
              "displayName": "userId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -544,
        1312
      ],
      "id": "ca7aa9d0-3b00-48ff-8f36-0f613779afa2",
      "name": "NEWS Agent"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "21S6H1nrg1hD1XLG",
          "mode": "list",
          "cachedResultName": "[SUB] DR Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "userInput": "={{ $('Code-Switch').item.json.userInput }}",
            "url": "={{ $('Code-Switch').item.json.url }}",
            "userId": "={{ $('Webhook').item.json.body.events[0].source.userId }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "userInput",
              "displayName": "userInput",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "userId",
              "displayName": "userId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -544,
        1504
      ],
      "id": "dcfb3172-b759-4d33-8716-e29df9138caa",
      "name": "DR Agent"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "PaQ43QCGzFQWzCS6",
          "mode": "list",
          "cachedResultName": "[SUB] STOCK Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "userInput": "={{ $('Code-Switch').item.json.userInput }}",
            "url": "={{ $('Code-Switch').item.json.url }}",
            "userId": "={{ $('Webhook').item.json.body.events[0].source.userId }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "userInput",
              "displayName": "userInput",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "userId",
              "displayName": "userId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -544,
        1696
      ],
      "id": "6ac9622f-d745-4723-8cb9-4bc4ed5cfe71",
      "name": "STOCK Agent"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "RoVGba1IgSAfYGXG",
          "mode": "list",
          "cachedResultName": "[SUB] WEB"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "website": "={{ $('Code-Switch').item.json.userInput }}"
          },
          "matchingColumns": [
            "website"
          ],
          "schema": [
            {
              "id": "website",
              "displayName": "website",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -544,
        2080
      ],
      "id": "946e6b64-2b82-4c5e-97e3-2873ba4ab228",
      "name": "WEB Module"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "pREFTPr9mIe4as8L",
          "mode": "list",
          "cachedResultName": "[SUB] CB Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "userId": "={{ $('Webhook').item.json.body.events[0].source.userId }}",
            "userInput": "={{ $('Code-Switch').item.json.userInput }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "userInput",
              "displayName": "userInput",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "userId",
              "displayName": "userId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -544,
        1888
      ],
      "id": "a17f3bc1-fac0-421e-95f0-4f796795418f",
      "name": "CB Agent"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "UTVTundxgsW7Lhly",
          "mode": "list",
          "cachedResultName": "[SUB] SUBS Module"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "userType": "={{ $('Webhook').item.json.body.events[0].source.type }}",
            "userId": "={{ $('Webhook').item.json.body.events[0].source.userId }}",
            "groupId": "={{ $('Webhook').item.json.body.events[0].source.groupId }}",
            "userInput": "={{ $('Code-Switch').item.json.userInput }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "userInput",
              "displayName": "userInput",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "userId",
              "displayName": "userId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "groupId",
              "displayName": "groupId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "userType",
              "displayName": "userType",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -544,
        2272
      ],
      "id": "4c942d61-8681-40ec-8e4b-c3c4baafd067",
      "name": "SUBS module"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"output\": [\n    \"@ITR - 技術趨勢內容整理\",\n    \"@FACT - 內容真實性、情緒傾向與客觀分析\",\n    \"@NEWS - 新聞查詢與整理\",\n    \"@DR - 深度研究與多來源整合\",\n    \"@STOCK - 股票即時/歷史查詢\",\n    \"@WEB - 網頁爬取與摘要\",\n    \"@SUBS - 訂閱網站更新通知\",\n    \"@EAT - 作燴午餐小助手\",\n    \"@IMG 後上傳圖片 - 食物分析\",\n    \"@GPT20 - 體驗gpt-oss-20b\",\n    \"@GPT120 - 體驗gpt-oss-120b\",\n    \"@CB - C_Booking助手\"\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -544,
        3040
      ],
      "id": "bf308f7b-01a3-4979-8208-adcfec6d8a79",
      "name": "Help Form"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://food-detection-api:8084/ask_Q",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "question",
              "value": "={{ $json.userInput }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -544,
        2848
      ],
      "id": "6ad68055-b241-49ae-bf22-ac375f85eec9",
      "name": "EAT Ask"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "0PE3toWgEbBJhKWd",
          "mode": "list",
          "cachedResultName": "[SUB] Food Image"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "messageId": "={{ $json.messageId }}",
            "userId": "={{ $('Webhook').item.json.body.events[0].source.userId }}"
          },
          "matchingColumns": [
            "messageId"
          ],
          "schema": [
            {
              "id": "userId",
              "displayName": "userId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "messageId",
              "displayName": "messageId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -544,
        2464
      ],
      "id": "eb7ca0e6-bccc-43ce-9304-221e2965de2b",
      "name": "Food Image"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "0WKdsnjvehU1lghP",
          "mode": "list",
          "cachedResultName": "[SUB] Image Module"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "userId": "={{ $('Webhook').item.json.body.events[0].source.userId }}"
          },
          "matchingColumns": [
            "userId"
          ],
          "schema": [
            {
              "id": "userId",
              "displayName": "userId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -544,
        2656
      ],
      "id": "da961529-8c52-4d81-8f28-3f14a8b85f86",
      "name": "Image Module"
    }
  ],
  "pinData": {},
  "connections": {
    "Code": {
      "main": [
        [
          {
            "node": "[TEST]發送回應給 LINE1",
            "type": "main",
            "index": 0
          },
          {
            "node": "發送回應給 LINE",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "ITR Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "FACT Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "NEWS Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "DR Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "STOCK Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "CB Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "WEB Module",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SUBS module",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "EAT Ask",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Image Module",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Food Image",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Help Form",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Code-Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code-Switch": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "[TEST]發送回應給 LINE1": {
      "main": [
        []
      ]
    },
    "ITR Agent": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "FACT Agent": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NEWS Agent": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DR Agent": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "STOCK Agent": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CB Agent": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Help Form": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EAT Ask": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Food Image": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "WEB Module": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SUBS module": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Image Module": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "7a577054-f5a4-4de8-a4ac-23608f02edf8",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "fe071ad636e45e06fef1442bb4b3138ea8056f3019d720e9410a8f0ea42951a8"
  },
  "id": "ZeW1WKuDcgsGWnoo",
  "tags": [
    {
      "createdAt": "2025-08-21T02:49:05.390Z",
      "updatedAt": "2025-08-21T02:49:05.390Z",
      "id": "lygt6UVIOm5CiWbW",
      "name": "linebot"
    }
  ]
}